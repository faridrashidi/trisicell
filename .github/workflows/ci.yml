name: CI

on:
    schedule:
    -   cron: 00 00 * * 1  # run every Monday at 00:00
    push:
        branches:
        -   master
        -   develop
        tags:
        -   v[0-9]+.[0-9]+.[0-9]+
    pull_request:
        branches:
        -   master
        -   develop

jobs:
    init:
        runs-on: ubuntu-latest
        outputs:
            skip: ${{ steps.ci-skip-step.outputs.ci-skip }}
        steps:
        -   uses: actions/checkout@v2
            with:
                fetch-depth: 0
        -   id: ci-skip-step
            uses: mstachniuk/ci-skip@master
            with:
                commit-filter: '[ci skip];[ci-skip];[skip ci];[skip-ci]'
                commit-filter-separator: ;

    lint:
        needs: init
        if: ${{ github.event_name == 'schedule' || needs.init.outputs.skip == 'false' }}
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -   name: Set up Python 3.7
            uses: actions/setup-python@v2
            with:
                python-version: 3.7
        -   name: Install dependencies
            run: |
                python -m pip install --upgrade pip
                pip install pre-commit
        -   name: Run static analysis
            run: |
                pre-commit run --all-files --show-diff-on-failure

    test:
        needs: lint
        name: test on ${{ matrix.os }} with python ${{ matrix.python }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            max-parallel: 20
            matrix:
                python: [3.6, 3.7, 3.8, 3.9]
                os: [ubuntu-latest, macos-latest]
        env:
            OS: ${{ matrix.os }}
            PYTHON: ${{ matrix.python }}
        steps:
        -   uses: actions/checkout@v2
            with:
                fetch-depth: 0
        -   name: Set up Python ${{ matrix.python }}
            uses: actions/setup-python@v2
            with:
                python-version: ${{ matrix.python }}
        -   name: Get pip cache dir
            id: pip-cache-dir
            run: |
                echo "::set-output name=dir::$(pip cache dir)"
        -   name: Restore pip cache
            uses: actions/cache@v2
            with:
                path: ${{ steps.pip-cache-dir.outputs.dir }}
                key: pip-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/requirements.txt') }}
                restore-keys: |
                    pip-${{ runner.os }}-${{ env.pythonLocation }}-
        -   name: Install dependencies
            run: |
                ./.scripts/ci/install.sh
        -   name: Unit tests
            run: |
                python -m pytest --cov=trisicell ./tests
        -   name: Upload coverage
            if: success()
            env:
                CODECOV_NAME: ${{ matrix.python }}-${{ matrix.os }}
            run: |
                codecov --no-color --required --flags unittests

    build_wheels:
        name: build wheels on ${{ matrix.os }}
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            max-parallel: 20
            matrix:
                os: [ubuntu-latest, macos-latest]

        steps:
        -   uses: actions/checkout@v2

        -   name: Install Python
            uses: actions/setup-python@v2
            with:
                python-version: '3.8'

        -   name: Build wheels
            uses: pypa/cibuildwheel@v2.0.0a4

        -   uses: actions/upload-artifact@v2
            with:
                path: ./wheelhouse/*.whl

    build_sdist:
        name: build source distribution
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2

        -   name: Install Python
            uses: actions/setup-python@v2
            with:
                python-version: '3.8'

        -   name: Build sdist
            run: python setup.py sdist

        -   uses: actions/upload-artifact@v2
            with:
                path: dist/*.tar.gz

    deploy:
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        needs: [test, build_wheels, build_sdist]
        runs-on: ubuntu-latest
        steps:
        -   name: Artifact
            uses: actions/download-artifact@v2
            with:
                path: dist

        -   name: Publish wheels to PyPI
            uses: pypa/gh-action-pypi-publish@v1.4.2
            with:
                user: __token__
                password: ${{ secrets.PYPI_TOKEN }}
